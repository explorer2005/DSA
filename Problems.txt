leetcode 136
n^n=0  &   n^0=0   (XOR bitwose operator)  (thinking from 4+2+1-1-2=4)

total no of sub arrays = n*(n+1)/2

kadanes in leetcode 53
in pair sum use 2 pointer approach as the array is already sorted.

moore's in leetcode 169
frequency hamesha zyada ki max hi hogi agar kam walo ki frequency ko decrease bhi kar dia to

leetcode 238
use preffix and suffix approach for getting the product of the other elements in the array.

leetcode11
use 2 pointer approach 

leetcode 33
use left or right binary search

leetcode 540
think of corner cases and middle right and left 
but giving runtime error

leetcode 75
directly cpp has inbuilt sort function in which begining and ending elemnt is passed and array is passed.
in built function has tc of o(nlogn)
optimised:- count number of different elements and just put them 
more optimised:- dutch national flag algo
3 pointer approach 0 1 2 take as low mid and high, low and mid at 0 and high at n-1 and sort 

leetcode 1910
The str.find(to be searched) provides the index where the substring first exists and if not then gives an invalid output 
str.erase(start,end) is used to remove the substring and the end is basically the length of the substring to be searched 

leetcode 567 
the total number of permutations can be checked by storing the frequency of each letter and using the window approach 

leetcode 151
first reverse the whole sentence then reverse the each word and then take the new string and add with space the reversed word and then in final answer remove the first space

leetcode 443
to_string(count) is used to convert anything to the string 
string can be resized using char.resize(size of the new)

leetcode 54
in spiral take 4 variablesas srow, erow, scol, ecol and remember to put a check for repeatation in odd case and codition for while loop shoud be < and =


leetcode 1
the best way to find anything is stroingg it in the unordered map and then using the find

leetcode 2965
since once value is to be found which is repeated so use sets and for not present number use that expectedsum-actualsum++repeated value;

leetcode 287
bad approach is search in set if matched then return the ans;
better approach use karni ha as given that no extra space to be used that no unordered map and sets can be used 
use slow fast approach that is cosider the array as a linked list in which index is node and the values are acting as next nodes

leetcode 15
while putting the triplet in the set always sort it so that duplicate cant be stored again 
and we use set only here not unordered set as unordered ka lia custom hash likhna padega isilia
better approach is find a and b with loop then c=-(a+b) and find it inside the loop using set or maps 

leetcode 90
Here first sort the given array so that if once the element is excluded and next time again the same eleemnt is included then repition occur so we have to remove that subset 

count inversion 
inversions are those in which if(arr[i],arr[j])
so if i<j then arr[i]>arr[j];
optiomal approach is using merge sort
ine merge sort multiple inversions can be counted together so if arr[i]>arr[j] so we must increasecount by mid-i+1 as i se mid ke beech bhi j se  inversion form karenge  

leetcode 51
first convert prroblem to placing the queen row by row after that check whthere its safetoplace and while backtracking place . back and once row reaches last, pushback that in ans and for is safe check horizontally, vertically, left diagonal only above that as we are placing the queen rowwise and similarly for right diagonal 

leetcocde 37
for checking is safe check in the row, int the column, int box, for checking in the box find the nearest startcand start row, its found by (row/3)*3 or (col/3)*3; and create helper function to put the digits, if row==9 return true and for next col, if col==9 its 0 and next row is row +1 

Rate in a maze; 
first of base case are row and col should be less then max, row and col should be grater than 0, the cell should be unvisited and should be not be equal to 0,
recurscive calls to up, down, left, right
in backtrcking again put false on the visited cells which are marked as true 
optimisation:-
visited alag se na banakar rather original board pa hi -1 dal denge aur bact trak ka time1 kar denge 

Leetcode 39
in this question there can be 3 case element is included once, more than once or excluded;
so for once, reci=ursion condition will be called by increasing the index by 1 and then decreasing the target(its necessary to decrease the target and use it as a parameter because otherwise it will goin an infinite loop as its very difficult to know the condition where to stop),in case of more than once i remains the same and in case of exclusion, first do backtrack by popping the number out of the array and then increasing the index of the array.
base conditions are:- target==0 ans pushbackreturn, if target<0 or i==0 then just return. 
but here many cases will be repeated so we need to track different only and for that we can create a set 

Leetcode 131
here partitions are made and thr right part is check if palindrome or not of not then nothing just change the partition, ifyes then stor the partition and givethe recursive call for partitions in the right part of the string, while backtracking just pop back the already included part, base case is when we reach the empty string.

Leetcode 2315
inside pair kophele false kardo to jabtak first aiga * count jaisa hi ch ="|" ai make insidePair=!insidePair so opposite ban jaiga agar false to true and true to false, in such a way all * without between| will be counted
